<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 导入properties文件中的键值对，需要 context 名称空间-->
    <context:property-placeholder location="classpath:db.properties"/>

    <!-- 使用c3p0连接池配置数据源，需要导入c3p0的jar包 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 是否开启自动提交，默认为false -->
        <property name="autoCommitOnClose" value="false"/>
        <property name="driverClass" value="${dataSource.driver}"/>
        <property name="jdbcUrl" value="${dataSource.url}"/>
        <property name="user" value="${dataSource.username}"/>
        <property name="password" value="${dataSource.password}"/>
        <!-- 池的配置 -->
        <!--初始化时获取多少个连接，取值应在minPoolSize与maxPoolSize之间。默认值: 3 -->
        <property name="initialPoolSize" value="${c3p0.initialPoolSize}"/>
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
        <property name="minPoolSize" value="${c3p0.minPoolSize}"/>
        <property name="maxStatements" value="${c3p0.maxStatements}"/>
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 -->
        <property name="acquireIncrement" value="${c3p0.acquireIncrement}"/>
        <!--最大空闲时间,指定多少秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0 -->
        <property name="maxIdleTime" value="${c3p0.maxIdleTime}"/>
        <!--指定多少秒检查一次所有连接池中的空闲连接。默认值: 0 -->
        <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}"/>
    </bean>

    <!-- sqlsessionfactory，mybatis-spring提供的SqlSessionFactoryBean类,该类实现了FactoryBean接口 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- mybatis的核心配置文件路径，该文件中只保留mybatis的一些设置 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 接口映射文件路径，*匹配任意字符 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>


    <!-- 配置mapper接口的扫描 -->
    <!-- bean的名称为接口的类名，首字母小写 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="wujiuye.morelove.chat.srv.dao"/>
    </bean>


    <!-- 开启ioc注解扫描 -->
    <!-- 扫描业务接口实现类 -->
    <context:component-scan base-package="wujiuye.morelove.chat.srv.service.impl,wujiuye.morelove.chat.srv.handler"/>
    <!--开启aop注解扫描-->
    <aop:aspectj-autoproxy/>


    <!-- 开启spring事务，依赖spring-jdbc的jar包 -->
    <!-- 数据库事务管理器 -->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据源 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 开启事务注解功能 -->
    <!--
        如果不指定transaction-manager,默认会使用id设为transactionManager的事务管理器，
        如果不指定transaction-manager，且事务管理器的id也不为transactionManager就，
        就需要在@Transactional注解中配置transactionManager = "事务管理器的id"，否则就会抛出异常。
        @Transactional(transactionManager="dataSourceTransactionManager");
     -->
    <tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>


    <!-- spring整合netty的配置 -->
    <bean id="springChannelInitializer"
          class="wujiuye.morelove.chat.srv.nettyspring.SpringChannelInitializerFactoryBean"/>

    <bean id="serverBootstrap" class="wujiuye.morelove.chat.srv.nettyspring.SpringServerBootstrapFactoryBean">
        <!-- ChannelInitializer -->
        <constructor-arg name="springChannelInitializer">
            <ref bean="springChannelInitializer"/>
        </constructor-arg>
        <!-- 端口号 -->
        <constructor-arg name="port" value="1314"/>
        <!-- SO_BACKLOG -->
        <property name="soBackLog" value="1024"/>
        <!-- 是否开启心跳包机制 -->
        <property name="soKeepAlive" value="true"/>
        <!-- 是否开启无延迟 -->
        <property name="tcpNoDelay" value="true"/>
    </bean>

</beans>