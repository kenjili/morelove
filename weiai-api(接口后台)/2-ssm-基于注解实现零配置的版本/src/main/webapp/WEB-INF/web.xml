<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
         http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         id="WebApp_ID" version="2.5">


    <!-- xml配置文件方式的配置 -->
    <!-- 配置spring mvc 的 前端控制器 -->
    <!--<servlet>-->
        <!--<servlet-name>springMVC</servlet-name>-->
        <!--<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>-->
        <!--<init-param>-->
            <!--<param-name>contextConfigLocation</param-name>-->
            <!--<param-value>classpath:spring/spring-mvc.xml</param-value>-->
        <!--</init-param>-->
        <!--<load-on-startup>1</load-on-startup>-->
    <!--</servlet>-->
    <!--<servlet-mapping>-->
        <!--<servlet-name>springMVC</servlet-name>-->
        <!--<url-pattern>/</url-pattern>-->
    <!--</servlet-mapping>-->


    <!-- xml方式的配置 -->
    <!-- tomcat启动监听器，用来初始化spring的bean容器 -->
    <!--<listener>-->
        <!--<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>-->
    <!--</listener>-->
    <!--<context-param>-->
    <!--<param-name>contextConfigLocation</param-name>-->
    <!--<param-value>classpath:spring/spring.xml</param-value>-->
    <!--</context-param>-->

    <!-- tomcat启动监听器,因为需要使用到spring中的一些bean
 ，所以需要在spring初始化完成之后才能被调用，所以要声明在ContextLoaderListener之后 -->
    <!--<listener>-->
    <!--<listener-class>wjy.weiai7lv.listener.InitRedisService</listener-class>-->
    <!--</listener>-->

    <!-- 使用spring-web提供的字符编码过滤器 -->

    <!--<filter>-->
        <!--<filter-name>characterEncodingFilter</filter-name>-->
        <!--<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>-->
        <!--<init-param>-->
            <!--<param-name>encoding</param-name>-->
            <!--<param-value>UTF-8</param-value>-->
        <!--</init-param>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
        <!--<filter-name>characterEncodingFilter</filter-name>-->
        <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->

    <!--
      spring提供的过滤器
      DelegatingFilterProxy:这个过滤器的作用是把请求拦截下来，再把请求
      交给spring容器中的一个bean来处理（targetBeanName属性指定的bean），targetBeanName就是filter-name的值,
      targetBeanName指定的bean需要在spring容器中配置。
     -->
    <!--<filter>-->
        <!--<filter-name>shiroFilter</filter-name>-->
        <!--<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
        <!--<filter-name>shiroFilter</filter-name>-->
        <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

</web-app>
