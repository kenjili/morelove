<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.wujiuye</groupId>
    <artifactId>weiai</artifactId>
    <version>20181121</version>
    <packaging>pom</packaging>

    <modules>
        <module>common</module>
        <module>repository</module>
        <module>pojo</module>
        <module>service-album</module>
        <module>service-lovetime</module>
        <module>service-business</module>
        <module>webapi</module>
        <module>service-ex</module>
    </modules>

    <distributionManagement>

    </distributionManagement>


    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <junit.vaesion>4.12</junit.vaesion>
        <!-- ===============spring boot================= -->
        <spring.boot.starter.version>2.0.2.RELEASE</spring.boot.starter.version>
        <aspectj.version>1.9.1</aspectj.version>
        <!-- ===============依赖的jar包的版本================= -->
        <lombok.version>1.16.20</lombok.version>
        <!-- shiro -->
        <shiro.version>1.4.0</shiro.version>
        <!-- json解析使用jackson -->
        <fasterxml.jackson.version>2.9.0</fasterxml.jackson.version>
        <!-- 阿里巴巴的数据库连接池 -->
        <druid.version>1.1.10</druid.version>
        <!-- swagger版本 -->
        <swagger.version>2.8.0</swagger.version>
    </properties>


    <dependencyManagement>
        <dependencies>

            <!-- =====================junit单元测试===================== -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.vaesion}</version>
                <scope>test</scope>
            </dependency>
            <!-- =====================导入Spring Boot的依赖管理===================== -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.starter.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- =====================导入切面工具包aspectj=========================== -->
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectj.version}</version>
            </dependency>
            <!-- ===========添加shiro相关依赖,也包括了支持spring的shiro-spring.*.*.*.jar============== -->
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-all</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <!-- ================================数据库连接池================================ -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!-- ================================json============================================== -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <!-- ==============================lombok============================================ -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <!-- ====================   集成swagger2用于构造api文档   ===================== -->
            <!-- 教程：https://www.cnblogs.com/jtlgb/p/8532433.html -->
            <!-- 构建Restful API 文档 -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!--
                    spring-boot的maven插件，
                    ，查看配置文件/Users/wjy/.m2/repository/org/springframework/boot/spring-boot-dependencies/2.0.2.RELEASE/spring-boot-dependencies-2.0.2.RELEASE.pom
                -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                </plugin>

                <!-- 以下这些都交由spring-boot-maven-plugin统一配置了 -->

                <!--&lt;!&ndash; maven中负责执行测试的插件 &ndash;&gt;-->
                <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-surefire-plugin</artifactId>-->
                <!--</plugin>-->

                <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-war-plugin</artifactId>-->
                <!--<version>2.6</version>-->
                <!--</plugin>-->
            </plugins>
        </pluginManagement>
    </build>
</project>
