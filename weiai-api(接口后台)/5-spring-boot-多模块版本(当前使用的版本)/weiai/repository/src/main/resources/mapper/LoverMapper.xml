<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wujiuye.dao.LoverDao">

    <resultMap id="rmLover" type="Lover">
        <id column="id" property="id"/>
        <result column="details" property="details"/>
        <result column="love_img_thumb" property="loveImgThumb"/>
        <result column="state" property="state"/>
        <result column="create_datetime" property="createDatetime"/>
        <result column="update_datetime" property="updateDatetime"/>
        <!-- 一对一关联 -->
        <!-- property对应的java类中的属性，resultMap：查询结果映射，columnPrefix：查询结果列前缀 -->
        <!-- columnPrefix查询结果列加的前缀，如<select id="findLover"/>加的前缀u1_和u2_ -->
        <!-- resultMap="com.wujiuye.dao.UserDao.rmUser" namespace命名空间com.wujiuye.dao.base.UserDao加上resultMap的id -->
        <association property="man" resultMap="com.wujiuye.dao.UserDao.rmUser" columnPrefix="u1_"/>

        <!-- 除了使用别人文件中定义的resultMap,还可以自己定义,自己解析需要添加javaType,javaType：该属性的java类型 -->
        <association property="women" javaType="User" columnPrefix="u2_">
            <id column="id" property="id"/>
            <result column="username" property="username"/>
            <!-- 如果不加columnPrefix="u2_"的写法-->
            <!--<id column="u2_id" property="id"/>-->
            <!--<result column="u2_username" property="username"/>-->

            <result column="realname" property="realname"/>
            <result column="sex" property="sex"/>
            <result column="email" property="email"/>
            <result column="phone_number" property="phoneNumber"/>
            <result column="birthday" property="birthday"/>
            <result column="head_thumb" property="headThumb"/>
        </association>
    </resultMap>

    <insert id="registLover" parameterType="Lover">
        insert into tb_love (
          man_id,
          women_id,
          state,
          details)
        values (
          #{man.id},
          #{women.id},
          #{state},
          #{details})
    </insert>

    <!-- state=-1为删除状态 -->
    <select id="findLover" parameterType="int" resultMap="rmLover">
        select l.*,
        u1.id as u1_id,u1.username as u1_username,u1.sex as u1_sex,u1.realname as u1_realname,u1.email as u1_email,u1.birthday as u1_birthday,u1.head_thumb as u1_head_thumb,
        u2.id as u2_id,u2.username as u2_username,u2.sex as u2_sex,u2.realname as u2_realname,u2.email as u2_email,u2.birthday as u2_birthday,u2.head_thumb as u2_head_thumb
        from tb_love l
        left join tb_user u1 on l.man_id = u1.id
        left join tb_user u2 on l.women_id = u2.id
        where l.state!=-1 and (l.man_id = #{userId} or l.women_id=#{userId})
    </select>

    <!-- state=-1为删除状态 -->
    <update id="updateLover" parameterType="Lover">
        update tb_love
        <trim prefix="set" suffixOverrides=",">
            <if test="state!=-1">
                state=#{state},
            </if>
        </trim>
        where id=#{id} and state!=-1
    </update>

</mapper>